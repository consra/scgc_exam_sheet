events { }

http {
    # Redirect all http traffic to https.
    server {
        listen 80 default_server;
    	listen [::]:80 default_server;
	
        # Match any hostname used.
        server_name _;
        return 301 https://$host$request_uri;
    }

    upstream dockers {
        # Default load balancing algorithm is used: Round Robin.
        server 10.10.0.21:8091;
        server 10.10.0.21:8092;
    }

    server {
        listen 443 ssl;
        #server_name domain_name;

        # Configure SSL. 
        ssl_protocols TLSv1.2;
        ssl_certificate /etc/ssl/nginx.crt;
        ssl_certificate_key /etc/ssl/nginx.key;
        ssl_prefer_server_ciphers on;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        # Add HSTS policy.
        add_header Strict-Transport-Security "max-age=2592000; includeSubDomains" always;

        # Set http version for proxying. Default is 1.0.
        proxy_http_version 1.0;

        # Forward the requesterâ€™s IP address (TODO: does this forward the protocol too?).
	proxy_set_header    Host              $host;
	proxy_set_header    X-Real-IP         $remote_addr;
	proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
	proxy_set_header    X-Forwarded-SSL on;
	proxy_set_header    X-Forwarded-Proto $scheme;

        # Redirect all requests to the load balancer group.
        location / {
            proxy_pass http://dockers;
        }
    }
}

